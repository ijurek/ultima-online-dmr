//-----------------------------------------------------------------------------
use polsys;


include ":banking:gold";
include "include/player/basic";
include "include/attributes/caps";
include "ai/include/tamed";

//-----------------------------------------------------------------------------

program UpdatePackets()

  print("[0x11]: Stats");
  return 1;

endprogram


//-----------------------------------------------------------------------------

exported function Stats(who, byref Packet)

  var pSerial := Packet.GetInt32(3); // BYTE[4] Player Serial.  3 bo zaczynamy liczenie od 0
  var Flag    := Packet.GetInt8(42); 
  //var Name		:= Packet.GetString(who, 7);

  	//print("Flaga to " + Flag);
	//print ("obrona na zimno " + who.resist_cold);
	//print ("obrona na ogien " + Name + who.resist_fire);
	
  if(pSerial == who.serial and Flag > 0)  //	BYTE[4] Player Serial = start from 3 BYTE
		//Packet.SetString(7,who.name,0);//	BYTE[30] Player Name = start from 7 BYTE
		//	BYTE[2] Current Hit Points (see notes) = 37 BYTE
		//	BYTE[2] Max Hit Points (see notes) = 39 BYTE
		//	BYTE[1] Name Change Flag (see notes) = 41
		//	BYTE[1] Status Flag (see notes) = 42
		//	BYTE[1] Sex+Race (see notes) = 43
		//	BYTE[2] Strength = 44
		//	BYTE[2] Dexterity = 46
		//	BYTE[2] Intelligence = 48
		//	BYTE[2] Current Stamina = 50
		//	BYTE[2] Max Stamina = 52
		//	BYTE[2] Current Mana = 54
		//	BYTE[2] Max Mana = 56
    	Packet.SetInt32(58, GetGold(who)); 	// BYTE[4] Gold In Pack = 58
		Packet.SetInt16(62, who.ar );		//	BYTE[2] Armor Rating (physical resistance) = 62
		//	BYTE[2] Weight = 64

		//	if(flag >= 5)

		//  BYTE[2] Max Weight = 66
		//  BYTE[1] Race (see notes) = 68

		if(flag >= 3)
		Packet.SetInt16(69, who.statcap); //	BYTE[2] Stats Cap = 69  GetStatCap(who)
		Packet.SetInt8(71, who.followers );  // BYTE[1] Followers (Pets) = 71, followers
		Packet.SetInt8(72, who.followers_max );	// BYTE[1] Followers Max Possible (Pets) = 72, followers_max
		//print("max followers to " + who.followers_max);
		endif

		if(Flag >= 4)

		if ( who.resist_fire > 0)
			Packet.SetInt16(73, who.resist_fire );  //	BYTE[2] Fire Resist (see notes) = 73, who.resist_fire
		else
			packet.SetInt16(73, 0x10000 + who.Resist_fire );
		endif

		if ( who.resist_cold > 0)
			Packet.SetInt16(75, who.resist_cold);	//	BYTE[2] Cold Resist (see notes) = 75, who.resist_cold
		else
			Packet.SetInt16(75, 0x10000 + who.resist_cold);
		endif
		
		if (who.resist_poison > 0)
			Packet.SetInt16(77, who.resist_poison);	//	BYTE[2] Poison Resist (see notes) = 77, who.resist_poison
		else
			Packet.SetInt16(77, 0x10000 + who.resist_poison);	
		endif	
		
		if (who.resist_energy > 0)
			Packet.SetInt16(79, who.resist_energy);	//	BYTE[2] Energy Resist (see notes) = 79, who.resist_energy
		else
			Packet.SetInt16(79, 0x10000 + who.resist_energy);
		endif
		
		//	BYTE[2] Luck = 81
		//	BYTE[2] Damage Minimum = 83
		//	BYTE[2] Damage Maximum = 85
		//	BYTE[4] Tithing points (Paladin Books) = 87
		endif
		
		//if(Flag >= 6)
//
		//Packet.SetInt16(91, 91); //  max Physical Resistance -- BYTE[2]  = 91 
		//Packet.SetInt16(93, 93);//   max Fire Resistance -- BYTE[2]  = 93 
		//Packet.SetInt16(95, 95);//   max Cold Resistance -- BYTE[2] = 95   
		//Packet.SetInt16(97, 97);//   max Poison Resistance -- BYTE[2]  = 97
		//Packet.SetInt16(99, 99);//   max energy Resistance -- BYTE[2]  = 99
		//Packet.SetInt16(101, 101);//  Defense Chance Increase --  BYTE[2]  = 101  Defense Chance Increase
		//Packet.SetInt16(103, 103);//   max Defense Chance Increase -- BYTE[2]  = 103
		//Packet.SetInt16(105, 105);//   Hit Chance Increase -- BYTE[2]  = 105 Hit Chance Increase
		//Packet.SetInt16(107, 107);//   Swing Speed Incrace -- BYTE[2]  = 107 Swing Speed Increase
		//Packet.SetInt16(109, 109);//   Weapon Damage Increase -- BYTE[2]  = 109 Damage Chance Increase
		//Packet.SetInt16(111, 111);//   Lower Reagent Cost -- BYTE[2]  = 111  Lower Reagent Cost
		//Packet.SetInt16(113, 113);//   Spell Damage Increase -- BYTE[2]  = 113  Spell Damage Increase
		//Packet.SetInt16(115, 115);//   Faster Cast Recovery -- BYTE[2]  = 115  Faster Cast Recovery
		//Packet.SetInt16(117, 117);//   Faster Casting -- BYTE[2]  = 117  Faster Casting
		//Packet.SetInt16(119, 119);//   Lower Mana Cost -- BYTE[2]  = 119  Lower Mana Cost
		//Packet.SetInt16(121, 121);//   ?? -- BYTE[2] Dexterity Increase = 121
		//Packet.SetInt16(123, 123);//   ?? -- BYTE[2] Intelligence Increase = 123
		//Packet.SetInt16(125, 125);//   ?? -- BYTE[2] Hit Points Increase = 125
		//Packet.SetInt16(127, 127);//   ?? -- BYTE[2] Stamina Increase = 127
		//Packet.SetInt16(129, 129);//   ?? -- BYTE[2] Mana Increase = 129
		//Packet.SetInt16(131, 131);//   ?? -- BYTE[2] Maximum Hit Points Increase = 131
		//Packet.SetInt16(133, 133);//   ?? -- BYTE[2] Maximum Stamina Increase = 133
		//Packet.SetInt16(135, 135);//   ?? -- BYTE[2] Maximum Mana Increase = 135
		
		//zosta≈Çy niewiadome
		//Hit Points Regeneration
		//Stamina Regeneration
		//Mana Regeneration
		//Reflect Physical Damage
		//Enhance Potions
		//Strength Increase
		//endif


  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------
