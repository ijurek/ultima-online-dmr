//-----------------------------------------------------------------------------

include "spawnrune";
include "spawnchest";
include "include/findcity";
include "include/loots";
include "include/npcs";
include "include/items";
include "include/coords";
include "include/logerror";
include "spawnnet";
include ":instances:instances";

//-----------------------------------------------------------------------------

var BadLocs  := 0;
var paragonTemplates := {"blackliche", "abysslord", "acidelemental", "ancientent", "ancientliche", "antqueen", "arcanedaemon", "arcymage", "armoredswampdragon", "baggelemental", "baggfiend", "baggwyvern", "balron", "blackdragon", "bonemage", "chaosdaemon", "cyclopse", "daemon", "darkelemental", "darklord", "desertfiend", "destroyergargoyle", "druidevilhorse", "druidevilost", "efreet", "enforcegargoyle", "etheralwarrior", "ettinlord", "evilnecrohose", "evilnecrohorse2", "evilnecromancer", "evilmage", "exodus", "exodusminionlord", "exodusminion", "exodusoverseer", "fireelemental", "firesteed", "forestlord", "forestqueen", "fourarmeddaemon", "frostdragon", "frostdrake", "gatedaemon", "golddragon2", "greatwyrm", "greatwyrm2", "greatwyrmgold", "greatwyrmice", "horde1", "horde2", "horde3", "iceelemental", "icefiend", "iceogrelord", "jukalord", "jukamage", "jukawarrior", "killer", "kraken", "leatherminotaur", "liche", "lichelord", "magelord", "meercapitan", "meerarcher", "meereternal", "minotaur", "meerwarrior", "ophidianavenger", "ophidianforcer", "ophidianwarrior", "orcdefender", "orcbrute", "orcking", "platedminotaur", "poisonelemental", "orclord", "pretoriannecro", "pretorianknight", "pretoriansummoner", "pretorianwarrior", "pretorianmage", "ratmanmag", "reddrake", "redragon", "seaserpent", "serpentinedragon", "shadowknight", "shadowlord", "shadowwarrior", "skeletaldragon", "snowelemental", "earthelemental", "snoworclord", "spectralspiderlord", "spectraldrake", "spiderlord", "sphinx", "spectralexodusminionlord", "succubus", "swampdragon", "szamanbarb", "tenwilkolakprzyowdca", "terathavenger", "titan", "pretorianlord", "terathandrone", "terathamatriarch", "tormentedminotaur", "trollarcherelita", "trollmarksman", "trollmarksman2", "troll5", "troll4", "troll3", "trollshaman", "trollwarlord", "tulacz", "tulaczpokory", "vampirelord", "vampirelord2", "vampiremage", "wyvern", "zlady", "wilkolak", "waterelemental", "giant_serpent" };

//-----------------------------------------------------------------------------

program DoSpawn(Rune)

  if(!Rune)
    return;
  endif

  SetObjProperty(Rune,"#SpawnPid",GetPid());

  var CreatedObjects := CheckExistingObjects(Rune);
  var loop           := GetRuneAmount(Rune);
  var Template       := GetRuneTemplate(Rune);

  var CreatedSpawn;
  var nX,nY,nZ,tryes := 0,others := 0,Temp;
  var MapInfo, MainCfg;

  if(GetCheckedType(Rune) != GetRuneType(Rune))
    return;
  endif

  case(GetRuneType(Rune))
    NPC_SPAWN:        Template     := CStr(Template);
    
    NPCGROUP_SPAWN:   MainCfg      := ReadConfigFile(NPC_GROUP_CFG);
                      Temp         := GetConfigStringArray(MainCfg[Template],"spawn");
                      
    ITEM_SPAWN:       MainCfg      := ReadConfigFile(ITEM_GROUP_CFG);
                      Temp         := GetConfigStringArray(MainCfg[Template],"spawn");
                      
    CHEST_SPAWN:      MainCfg      := ReadConfigFile(SCHEST_CFG);
                      if(!MainCfg[Template])
                        return;
                      endif
                      
    default:          return;
  endcase

  GetBadLocs(Rune);

  if(!IsValidLoc(Rune.x, Rune.y, GetMapInfo(Rune.x, Rune.y, Rune.realm).landtile))
    LogNotice("[DoSpawn] SpawnRune "+GetRuneNr(Rune)+" stoi w zabronionej strefie "+Rune.x+" "+Rune.y+" "+Rune.z+" "+Rune.realm, LOGF_WORLD);
  endif
  
  case(GetRuneType(Rune))
    NPC_SPAWN:
    NPCGROUP_SPAWN:       while(loop > 0)

                            if(len(CreatedObjects) >= GetRuneMaxAmount(Rune))
                              break;
                            endif

                            if(GetRuneType(Rune) == NPCGROUP_SPAWN)
                              Template     := Temp[(RandomInt(Len(Temp))+1)];
                            endif

                            if(!GetRuneRange(Rune))
                              nX := Rune.x;
                              nY := Rune.y;
                            else
                              nX := CInt(CInt(Rune.x - GetRuneRange(Rune) + CInt(RandomInt(GetRuneRange(Rune)*2))+1));
                              nY := CInt(CInt(Rune.y - GetRuneRange(Rune) + CInt(RandomInt(GetRuneRange(Rune)*2))+1));
                            endif

                            MapInfo    := GetMapInfo( nX, nY, rune.realm );
                            var Height := GetWorldHeight(nX,nY,rune.realm);
                            var Stand;
                            
                            if(MapInfo.z != error)
                              Stand := GetStandingHeight(nX,nY,MapInfo.z,rune.realm);
                            elseif(Height != error)
                              Stand := GetStandingHeight(nX,nY,Height,rune.realm);
                            else
                              Stand := error;
                            endif

                            if(IsSetFlag(Rune,RUNEF_BASE_Z))
                              nZ := Rune.z;
                            elseif(MapInfo.z == error)
                              nZ := Height;
                            elseif(Stand == error)
                              nZ := error;
                            else
                              nZ := Stand.z;
                            endif

                            if(nZ == error)
                              if(GetNpcConfig(Template).MoveMode["S"])
                                nZ := MapInfo.z;
                              else
                                nZ := GetWorldHeight(nX,nY,rune.realm);
                              endif
                            endif

                            CreatedSpawn := 0;

                            if(nZ != error)
                              if(abs(nZ - Rune.z) < 20)
                                if(IsValidLoc(nX, nY, MapInfo.landtile))
                                  if(CheckNpcFlags(Rune, nX, nY))              
                                    CreatedSpawn := CreateNpc(Template,nX,nY,nZ,Rune.realm);									
									if(CreatedSpawn.npctemplate in paragonTemplates && (RandomInt(9) > RandomInt(100)+5))
										SetBaseStrength(CreatedSpawn, GetBaseStrength(CreatedSpawn)+RandomInt(550)+310);
										SetBaseDexterity(CreatedSpawn, GetBaseDexterity(CreatedSpawn)+RandomInt(250));
										//SetMaxHp(CreatedSpawn, GetMaxHp(CreatedSpawn) +  RandomInt(300) + 1160);
										SetMaxMana(CreatedSpawn, GetMaxMana(CreatedSpawn) + RandomInt(300) + 1160);
										SetObjProperty(CreatedSpawn, "Paragon", 1);
										CreatedSpawn.color := 1169;
										CreatedSpawn.run_speed := 4000;
										SetName(CreatedSpawn, CreatedSpawn.name + " (paragon)");
										SetObjProperty(CreatedSpawn, "NpcDmgMod", 1.55);
										SetObjProperty(CreatedSpawn, "SuperLoot", RandomInt(3)+2);
										CreateLoot(CreatedSpawn, RandomInt(200));
										CreateLoot(CreatedSpawn, RandomInt(200));
										CreateLoot(CreatedSpawn, RandomInt(200));
										CreateLoot(CreatedSpawn, RandomInt(200));
										
										var randomItem := 3333;
				
										case(RandomInt(10)+1)
											1: randomItem := 8442;
											2: randomItem := 7955;
											3: randomItem := 3700;
											4: randomItem := 7186;
											5: randomItem := 3315;
											6: randomItem := 3887;
											7: randomItem := 16104;
											8: randomItem := 8444;
											9: randomItem := 8448;
												10: randomItem := 8451;
										endcase
										if(RandomInt(33) > RandomInt(120))
											var pItem := CreateItemInPack(CreatedSpawn, randomItem, 1);
											if(!pItem)
											AlertGMs("Paragony: pItem nie zostal stworzony - blad " + CreatedSpawn.serial);
											endif
											pItem.name := "Zabicie paragona";
											SetObjProperty(pItem, "SpecialTag", "Wydobyte z ciala poteznego paragona");
										endif
										
										
									
									endif

									
                                  endif
                                endif
                              endif
                            endif

                            if(!CreatedSpawn)
                              tryes := tryes + 1;
                              if(tryes >= MAX_CREATE_TRYES)
                                LogNotice("[DoSpawn] Nie znaleziono dobrego miejsca na spawn runo "+GetRuneNr(rune)+" x: "+rune.x+" y: "+rune.y+" z: "+rune.z+" R: "+rune.realm, LOGF_WORLD);
                                break;
                              endif
                            else
                              CreatedSpawn := AddOnNpcFlags(Rune,CreatedSpawn);
                              CreatedObjects.append(CreatedSpawn.serial);
                              SetObjProperty(CreatedSpawn,"Spawnnet",GetRuneNr(Rune));
                              SetObjProperty(CreatedSpawn,"#PeaceTime",ReadGameClock() + 10);
                              SetObjProperty(Rune,PROP_CREATED_OBJECTS,CreatedObjects);
                              loop := loop - 1;
                              tryes := 0;
                            endif
							
							/* instances */
							AdjustInstanceStatus(CreatedSpawn, Rune);
							
							

                            if(CreatedSpawn)
                              sleep(2);
                            else
                              sleepms(20);
                            endif
                          endwhile

    ITEM_SPAWN:           while(loop > 0)

                            if(len(CreatedObjects) >= GetRuneMaxAmount(Rune))
                              break;
                            endif

                            Template := CInt(Temp[CInt(RandomInt(len(Temp))+1)]);

                            if(!GetRuneRange(Rune))
                              nX := Rune.x;
                              nY := Rune.y;
                            else
                              nX := CInt(CInt(Rune.x - GetRuneRange(Rune) + CInt(RandomInt(GetRuneRange(Rune)*2))+1));
                              nY := CInt(CInt(Rune.y - GetRuneRange(Rune) + CInt(RandomInt(GetRuneRange(Rune)*2))+1));
                            endif

                            MapInfo  := GetMapInfo( nX, nY, rune.realm );

                            if(IsSetFlag(Rune,RUNEF_BASE_Z))
                              nZ := Rune.z;
                            else
                              nZ := MapInfo.z;
                            endif

                            if(nZ == error)
                              nZ := GetWorldHeight(nX,nY,rune.realm);
                            endif

                            others := 0;

                            if(!IsValidLoc(nX, nY, MapInfo.landtile))
                              others := 1;
                            elseif(!IsSetFlag(Rune,RUNEF_BITEMS))
                              foreach items in ListItemsAtLocation(nX,nY,nZ,rune.realm)
                                if(items.objtype != UOBJ_SRUNE)
                                  others := others + 1;
                                endif
                              endforeach
                            endif

                            CreatedSpawn := 0;

                            if(!others)
                              if(CheckItemFlags(rune,nX,nY,nZ))
                                CreatedSpawn := CreateItemAtLoc(nX,nY,nZ,Template,1,rune.realm);
                              endif
                            endif

                            if(!CreatedSpawn)
                              tryes := tryes + 1;
                              if(tryes >= MAX_CREATE_TRYES)
                                LogNotice("[DoSpawn] Nie znaleziono dobrego miejsca na spawn runo "+GetRuneNr(Rune), LOGF_WORLD);
                                break;
                              endif
                            else
                              CreatedObjects.append(CreatedSpawn.serial);
                              CreatedSpawn.movable := 0;
                              SetObjProperty(CreatedSpawn,"Spawnnet",GetRuneNr(Rune));
                              SetObjProperty(rune,PROP_CREATED_OBJECTS,CreatedObjects);
                              loop := loop - 1;
                              tryes := 0;
                            endif

                            if(CreatedSpawn)
                              sleep(2);
                            else
                              sleepms(20);
                            endif

                          endwhile

    CHEST_SPAWN:          if(ChestContentChanged(Rune, CreatedObjects))
                            DestroyChestSpawns(Rune);
                            CreateLoot(Rune, GetRuneTemplate(Rune), SCHEST_CFG);
                            CreatedObjects := array;
                            foreach Item in EnumerateItemsInContainer(Rune)
                              CreatedObjects.append(Item.serial);
                            endforeach
                            SetObjProperty(Rune,PROP_CREATED_OBJECTS,CreatedObjects);
                            SetObjProperty(Rune,"SpawnSize", CreatedObjects.size());
                          endif
                          
  endcase

endprogram

//-----------------------------------------------------------------------------

function ChestContentChanged(Chest, byref CreatedObjects)

  if(!CreatedObjects.size())
    return 1;
  endif

  if(CInt(GetObjProperty(Chest, "SpawnSize")) != CreatedObjects.size())
    return 1;
  endif

  foreach Item in CreatedObjects
    if(Item.container != Chest)
      return 1;
    endif
  endforeach

  return 0;

endfunction

//-----------------------------------------------------------------------------

function CheckItemFlags(rune,x,y,z)

  if(IsSetFlag(Rune, RUNEF_BITEMS))
    foreach item in Listitemsatlocation(x,y,z,rune.realm);
      if(item.movable)
        DestroyItem(item);
      else
        return 0;
      endif
    endforeach
  endif

  if(IsSetFlag(Rune, RUNEF_NOCITY))
    if(FindCityCoords(x,y,Rune.realm))
      return 0;
    endif
  endif

  if(IsSetFlag(Rune, RUNEF_ONLYCITY))
    if(!FindCityCoords(x,y,Rune.realm))
      return 0;
    endif
  endif

  return 1;

endfunction

//-----------------------------------------------------------------------------

function CheckNpcFlags(rune,x,y)

  if(IsSetFlag(Rune, RUNEF_NOCITY))
    if(FindCityCoords(x,y,Rune.realm))
      return 0;
    endif
  endif

  if(IsSetFlag(Rune, RUNEF_ONLYCITY))
    if(!FindCityCoords(x,y,Rune.realm))
      return 0;
    endif
  endif

  if(GetStand(x,y,rune.realm).multi)
    return 0;
  endif

  return 1;

endfunction

//-----------------------------------------------------------------------------

function AddOnNpcFlags(rune,creature)

  if(IsSetFlag(Rune,RUNEF_FROZEN))
    SetFlag(Creature, NPCF_FROZEN);
    Creature.frozen := 1;
  endif

  if(GetObjProperty(Rune,PROP_ROUND_DESTS))
    SetObjProperty(creature,PROP_ROUND_DESTS,GetObjProperty(Rune,PROP_ROUND_DESTS));
  endif
  
  if(IsSetFlag(Rune,RUNEF_NOWANDER))
    SetFlag(creature, NPCF_NO_WANDER);
  endif
  
  if(IsSetFlag(Rune,RUNEF_GUARDIGNORE))
    SetFlag(creature, NPCF_GUARDIGNORE);
  endif

  if(GetRuneFacing(Rune) != "N/A")
    Creature.SetFacing(GetRuneFacing(Rune), 1);
  endif

  if(GetRuneOverColor(Rune))
    creature.color := GetRuneOverColor(Rune);
    SetObjProperty(creature,"SetColor",GetRuneOverColor(Rune));
  endif

  return creature;

endfunction

//-----------------------------------------------------------------------------

function GetBadLocs(Rune)

  var BadCfg := ReadConfigFile(":spawnnet:badlocs");

  if(BadCfg)
    BadLocs := GetConfigStringArray(BadCfg["Locs_"+Rune.realm], "Loc");
    if(BadLocs)
      foreach bLoc in BadLocs
        bLoc    := SplitWords(bLoc);
        bLoc[1] := CInt(bLoc[1]);
        bLoc[2] := CInt(bLoc[2]);
        bLoc[3] := CInt(bLoc[3]);
        bLoc[4] := CInt(bLoc[4]);
        bLoc[5] := CInt(bLoc[5]);
        bLoc[6] := CInt(bLoc[6]);
      endforeach
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function IsValidLoc(x, y, LandTile)

  if(BadLocs)
    foreach bLoc in BadLocs
      if(bLoc[1] <= x and bLoc[2] <= y and bLoc[3] >= x and bLoc[4] >= y)
        if(bLoc[5] and bLoc[6] and LandTile)
          if(bLoc[5] <= LandTile and bLoc[6] >= LandTile)
            return 0;
          endif
        else
          return 0;
        endif
      endif
    endforeach
  endif

  return 1;

endfunction

function AdjustInstanceStatus(mobile, rune)

	if(!GetObjProperty(rune, "InstanceStoneSerialNumber"))
		return;
	endif
	
	var instanceStone := SystemFindObjectBySerial(CInt(GetObjProperty(rune, "InstanceStoneSerialNumber")));
	
	if(!instanceStone)
		syslog("Spawnnet: Could not find instance stone assigned to a rune.");
		return;
	endif
	
	var status := GetInstanceStatus(instanceStone);
	
	// Just a safety measure, should never happen, but you never know.
	if(status != INSTANCE_STATUS_RUNNING)
		syslog("Spawned a mobile when status was not running. This is not legal!");
		ApplyRawDamage(mobile, 60000);
		return;
	endif
	
	var mobilePrefix := "(n)";
	var statModifier := 1;
	var level := 0;
	
	var difficulty := GetInstanceDifficulty(instanceStone);
	
	case(difficulty)
		INSTANCE_DIFFICULTY_NORMAL: break;
		INSTANCE_DIFFICULTY_HEROIC: mobilePrefix := "(h)"; statModifier := 2; level := 1; break;
		INSTANCE_DIFFICULTY_EPIC: mobilePrefix := "(e)"; statModifier := 3; level := 2; break; 
	endcase
	
	SetName(mobile, mobilePrefix + " " + mobile.name);
	
	// Here we set the base loot, even for normal difficulty it will be double
	//SetObjProperty(mobile, "SuperLoot", 2);
	
	
	if(statModifier > 1)
	
		IncreaseLeaderSkillsPoints(mobile, statModifier * 5);
		SetObjProperty(mobile, "SuperLoot", statModifier * 2);
		SetBaseStrength(mobile, GetBaseStrength(mobile) + (statModifier * 100));
		//SetBaseDexterity(mobile, GetBaseDexterity(mobile) + (statModifier * 100));
		
		if(GetMaxHp(mobile) > 200)
			SetMaxHp(mobile, GetMaxHp(mobile) +  RandomInt(300) + (statModifier * 500));
		endif
		
		SetMaxMana(mobile, GetMaxMana(mobile) + RandomInt(300) + (statModifier * 500));
		mobile.run_speed := 4000;
		if(statModifier > 2)
			SetObjProperty(mobile, "NpcDmgMod", 1.9);
		else
			SetObjProperty(mobile, "NpcDmgMod", 1.5);
		endif
		
	endif
	
	
	// Now we heal the mobile
	
	HealVitalById(mobile, VITALID_LIFE, 60000);
	HealVitalById(mobile, VITALID_MANA, 60000);
	
	PrintTextAbove(mobile, "*ryczy*", FONT_NORMAL, RED_COLOR);
	
	start_script(":instances:ai/fury", {mobile, level});
	

endfunction

//-----------------------------------------------------------------------------
