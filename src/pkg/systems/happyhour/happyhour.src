//-----------------------------------------------------------------------------

use uo;

//-----------------------------------------------------------------------------

include "include/clock";
include "include/std";
include "include/start";
include ":logging:common";
include ":happyhour:common";

//-----------------------------------------------------------------------------

var curTime;
var SecDelay,StartHour,Duration,HHTime;

//-----------------------------------------------------------------------------

program happyHour(Parms)
  if(!FillGlobCtrl(Parms))
    return 0;
  endif

  SetLogRunCycles(LST_CONTROL);

  var Cfg;

  while (1)       
    UnloadConfigFile(":happyhour:happyhour");
    Cfg := ReadConfigFile(":happyhour:happyhour");
    if(!Cfg)
      LogError("Saver: Nie znaleziono konfiga! :happyhour:happyhour");
      sleep(900);
    else
      SecDelay := CInt(GetConfigInt(Cfg["Conf"], "SecDelay"));
      StartHour := CInt(GetConfigInt(Cfg["Conf"], "StartHour"));
      Duration   := CInt(GetConfigInt(Cfg["Conf"], "Duration")) + StartHour;
      HHTime  :=  CInt(GetConfigInt(Cfg["Conf"], "HHTime"));


      curTime := ExtractTimeComponents(polcore().systime);

      if (curTime.hour >= StartHour and curTime.hour < Duration or GetGlobalProperty("ForceApplyHH"))
        var lastHHAppliedTime := CInt(GetGlobalProperty(PROP_GLOBALAPPLIEDTIME));
        if(lastHHAppliedTime > 0)
          if(ReadGameClock() - lastHHAppliedTime > 86400)
            ApplyHappyHourProps();
          endif
        else
          ApplyHappyHourProps();
        endif
      endif

      sleep(SecDelay);

    endif

  endwhile

endprogram

//-----------------------------------------------------------------------------

function ApplyHappyHourProps()

  var count := 0;

  var i, char;

  foreach acc in ListAccounts()

    acc := FindAccount(acc);
    for(i:=1;i<=5;i:=i+1)
      char := acc.GetCharacter(i);
      if(char)
        count += 1;
        SetAvailableHHTime(char, HHTime);
      endif
    endfor
  endforeach

  // Log
  var parms := {count, LOGTYPE_HAPPYHOUR_DISTRIBUTED};
  start_script(":logging:log_async", parms);

  SetGlobalProperty(PROP_GLOBALAPPLIEDTIME, ReadGameClock());

endfunction
